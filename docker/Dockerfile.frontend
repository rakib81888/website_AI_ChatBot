# Build stage
FROM node:16-alpine as build

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY frontend/admin-dashboard/package*.json ./admin-dashboard/
COPY frontend/client-dashboard/package*.json ./client-dashboard/

# Install dependencies for admin dashboard
WORKDIR /app/admin-dashboard
RUN npm install

# Install dependencies for client dashboard
WORKDIR /app/client-dashboard
RUN npm install

# Copy the frontend source code
COPY frontend/admin-dashboard /app/admin-dashboard
COPY frontend/client-dashboard /app/client-dashboard

# Build admin dashboard
WORKDIR /app/admin-dashboard
RUN npm run build

# Build client dashboard
WORKDIR /app/client-dashboard
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built apps from build stage
COPY --from=build /app/admin-dashboard/build /usr/share/nginx/html/admin
COPY --from=build /app/client-dashboard/build /usr/share/nginx/html/client

# Copy widget files
COPY frontend/widget /usr/share/nginx/html/widget

# Copy Nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]