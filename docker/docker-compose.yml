# docker-compose.yml
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: chatbot-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/chatbot
      - APP_ENV=production
    volumes:
      - ./data/backend:/app/data
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - chatbot-network

  db:
    image: postgres:13-alpine
    container_name: chatbot-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: chatbot
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - chatbot-network

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: chatbot-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - chatbot-network

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: chatbot-worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/chatbot
      - APP_ENV=production
    command: bash -c "celery -A main.celery worker --loglevel=info"
    volumes:
      - ./data/backend:/app/data
    depends_on:
      - db
      - backend
    networks:
      - chatbot-network

networks:
  chatbot-network:
    driver: bridge

volumes:
  db-data:
  app-data: